/* FT232HL GBA Dumper
 * 	Programmed by RGBA_CRT 2018 09
 * 
 * GAMEBOY A0-A15 ::: GBA D0-D15
 * GAMEBOY D0-D7  ::: GBA A16-A23
 *        
 * W I P な の で ま だコ ー ド が 汚 い
 */

'AB-FT232HLib
#include "..\D2XX.sbp"
#include "..\MCP23017_Lib.sbp"
#include "..\FT232HLib_debug.sbp"
'RGBALib
#include <RGBALib.sbp>
#include "ROM_Class_GBA.sbp"
#console

Const FT_COMMAND_BUFFER_SIZE = 1024*1024*5

Print "FT232H-GBAdvance-Dumper WIP      RGBA_CRT 2018"

'Open FT232H
Dim ft AS *FT232H
ft=new FT232H(FT_COMMAND_BUFFER_SIZE)

if ft->listupDeviceToConsole()=FALSE Then Input "[PRESS ENTER]",ft:End

Dim ftID As DWord
if ft->getNumberOfDevice() > 1 Then input "Select device >",ftID

if ft->openDevice(ftID)=FALSE Then Print "OpenError" : End
printf(ex"device #%02d online.\n\n",ftID)

Dim buf[512] AS Byte



Dim fe AS *FT232H_GBA_ROM
fe=New FT232H_GBA_ROM()
fe->init(ft)
fe->FT_SendCommands()

fe->AreaReadRequest(0,512)
fe->FT_SendCommands()
fe->FT_ReceiveData(buf,512)
Dump(buf+&HA0,32,&HA0)
Print

Dim header AS GBA_ROM_HEADER
memcpy(VarPtr(header),buf,sizeof(GBA_ROM_HEADER))

printf(ex"GBA ROM INFO:\n Title: %s\n GameCode: %s\n MakerCode: %c%c\n\n",header.Title,Dw2Str(GetDWord(VarPtr(header.GameCode))),header.MakerCode[0],header.MakerCode[1])
if (CheckNLogo(VarPtr(header)) or CheckHeaderSum(VarPtr(header)))=FALSE Then
	printf(ex"[接触不良] Contact failue!\n")
Endif 


Dim romSize AS DWord
romSize=SloveRomSize(fe)
printf(ex"[推定]ROM Size0x:%08X -> %dMB \n\n",romSize,romSize/(1024*1024))
ft->flush()

Const GBAD_BUFFER_SIZE=1024*50
Dim rxbuf AS BytePtr
rxbuf=calloc(GBAD_BUFFER_SIZE)

Dim i AS DWord, lt AS DWord
Dim out AS File
out.openFile(MakeStr(header.Title)+".test.gba",GENERIC_WRITE)
lt = GetTickCount()

Do

	fe->AreaReadRequest(i*GBAD_BUFFER_SIZE,GBAD_BUFFER_SIZE)
	fe->FT_SendCommands()
	fe->FT_ReceiveData(rxbuf,GBAD_BUFFER_SIZE)

	out.write(rxbuf,GBAD_BUFFER_SIZE)
	i++

	printf(ex"[DumpROM] ReadTotal %dKB %dMB ::: Time:%ds %dkb/s         \r",GBAD_BUFFER_SIZE*i/1024,GBAD_BUFFER_SIZE*i/(1024*1024), (GetTickCount()-lt)/1024,((i*GBAD_BUFFER_SIZE)/(GetTickCount()-lt)) As DWord)

Loop
debug

Function CheckNLogo(header AS *GBA_ROM_HEADER) AS BOOL
	Dim i aS Long,sum AS DWord
	For i=0 To 155
		sum+=header->NLogo[i]
	Next i
	printf(ex"NLogoSum: %x\n",sum)

	if sum=&H4B1B Then CheckNLogo=TRUE
End Function

Function CheckHeaderSum(header AS *GBA_ROM_HEADER) AS BOOL
	Dim i aS Long,sum AS DWord
	For i=&HA0 To &HBC
		sum=sum-GetByte(header+i)
	Next i
	sum= (sum - &H19) AND &HFF
	printf(ex"HeaderSum: %x %x\n",sum, header->HeaderSum)

	if sum=header->HeaderSum Then CheckHeaderSum=TRUE
End Function

Const GBA_SIZESLOVE_SAMPLE_SIZE = 1024*10
Const GBA_SIZESLOVE_SETP = &H100000*4
Const GBA_SIZESLOVE_OFFSET = &H0000
Function SloveRomSize(fe AS *FT232H_GBA_ROM) AS DWord
	Dim head As BytePtr, inbuf AS BytePtr,i AS Long

	head=calloc(GBA_SIZESLOVE_SAMPLE_SIZE)
	inbuf =calloc(GBA_SIZESLOVE_SAMPLE_SIZE)

	Do
		printf(ex"slove: AREA READ ::: %08X\n",GBA_SIZESLOVE_SETP*i+GBA_SIZESLOVE_OFFSET)
		fe->AreaReadRequest(GBA_SIZESLOVE_SETP*i+GBA_SIZESLOVE_OFFSET,GBA_SIZESLOVE_SAMPLE_SIZE)
		fe->FT_SendCommands()
		fe->FT_ReceiveData(inbuf,GBA_SIZESLOVE_SAMPLE_SIZE)
	'	Dump(inbuf,32)

		if isFilled(inbuf,GBA_SIZESLOVE_SAMPLE_SIZE,&HFF)=TRUE Then printf("reason:FF"):ExitDo	'SAMPLE_SIZE分がFFで埋められていたら
		if i=0 Then
			memcpy(head,inbuf,GBA_SIZESLOVE_SAMPLE_SIZE)
		Else
			if compareBin(inbuf,head,GBA_SIZESLOVE_SAMPLE_SIZE)=TRUE Then printf("reason:Some"):ExitDo	'先頭と比較
		Endif
		i++
	Loop

'	if i Mod 4 <>0 Then i+=4-(i Mod 4)
	SloveRomSize=i*GBA_SIZESLOVE_SETP

	free(head)
	free(inbuf )
End Function

Function isFilled(adr As BytePtr,size As DWord,checkByte As Byte) As Long
	Dim i As Long
	For i=0 To size-1
		if adr[i]<>checkByte Then ExitFunction
	Next
	isFilled=TRUE
End Function
		
Function compareBin(data1 As BytePtr,data2 As BytePtr,size As DWord) As Long
	Dim i As Long
	For i=0 To size-1
		if data1[i]<>data2[i] Then ExitFunction
	Next
	compareBin=TRUE
End Function

'https://problemkaputt.de/gbatek.htm#gbacartridgeheader
Type GBA_ROM_HEADER
	EntryPoint AS DWord
	NLogo[155] AS Byte
	Title[11] AS Byte
	GameCode[3] AS Byte
	MakerCode[1] AS Byte
	Fixed1 AS Byte
	MainUnitCode AS Byte
	DeviceType AS Byte
	Fixed2[6] AS Byte
	Version AS Byte
	HeaderSum AS Byte
End Type
	